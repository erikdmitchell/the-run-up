// variables
$gap: 15px;
$gridsize: 12;
$offsetsize: $gridsize - 1;

//breakpoints list
$breakpoints: ('xs': 576px, 'sm': 768px, 'md': 992px, 'lg': 1200px);

//use border box
@-ms-viewport {
    width: device-width;
}

html {
    box-sizing: border-box;
}

*, *:before, *:after {
    box-sizing: inherit;
}

// container
.container {
    width: 100%;
    padding-right: $gap;
    padding-left: $gap;
    margin-right: auto;
    margin-left: auto;
}

@media (min-width: 576px) { 
    .container {
        max-width: 540px;
    }
}

@media (min-width: 768px) { 
    .container { 
        max-width: 720px;
    }
}

@media (min-width: 992px) { 
    .container { 
        max-width: 960px;
    }
}

@media (min-width: 1200px) { 
    .container { 
        max-width: 1140px;
    }
}

.container-fluid { 
    width: 100%;
    padding-right: $gap;
    padding-left: $gap;
    margin-right: auto;
    margin-left: auto;
}

//row definition
.row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -1*$gap;
    margin-right: -1*$gap;
}

//column definition
[class^="col-"] { 
    position: relative;
    width: 100%;
    min-height: 1px;
    padding-left: $gap;
    padding-right: $gap;
}

//default metrics for columns
.col {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
}

.col-auto { 
    flex: 0 0 auto;
    width: auto;
    max-width: none;
}

@for $i from 1 through $gridsize {
    .col-#{$i} {
        width:  ( $i /$gridsize ) *100% ;
    }
}

//column offsets
@for $i from 1 through $offsetsize {
    .offset-#{$i} {
        width:  ( $i /$gridsize ) *100% ;
    }
}

//loop the breakpoint list, attach the middleware column classes
@each $slug, $size in $breakpoints {
    @media (max-width: #{$size}) {

        .col-#{$slug} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }

        .col-#{$slug}-auto { 
            flex: 0 0 auto;
            width: auto;
            max-width: none;
        }

        @for $i from 1 through $gridsize {
            .col-#{$slug}-#{$i} {
                width:  ( $i /$gridsize ) *100%;
            }
        }

        @for $i from 1 through $offsetsize {
            .offset-#{$slug}-#{$i} {
                width:  ( $i /$gridsize ) *100%;
            }
        }
    }
}